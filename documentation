commands:

(echo arg0 arg1 .. argN) - prints all arguments to standard output
(int var opt_init) - initialise variable `var`, optionally initialise it with value `opt_init`
(= var value) - assign `value` to `var`
(+ arg0 arg1 .. argN) - add children together
(- arg0 arg1 .. argN) - substract children together
(* arg0 arg1 .. argN) - multiply children together
(/ arg0 arg1 .. argN) - divine children together
(group arg0 arg1 .. argN) - group commands together, useful to pass multiple commands
	when another command expects only 1

(function name arguments commands) - declare function `name`, with arguments `arguments` which calls `commands`
	when executed

(class name subclass components) - declare class `name`, subclass of `subclass`
	and includes `components` (variables and functions)

(sprite name texture) - create sprite `name` with texture `texture`

(return arg0) - return `arg0` from a function
(array arg0 arg1 .. argN) - create an array containing all children

(if condition1 statement1 condition2 statement2 .. ( conditionN statementN ) / statementN) -
	For every 2 children, if `condition1` is true, then execute `statement1`. Same for condition 2, 3 until N.
	If there is an odd number of children, last statement will trigger if no other statement has.
