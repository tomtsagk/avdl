name: Create Build

on:
  push:
    branches:
      - develop
      - master
      - feature/improve_github_builds
  pull_request:
    branches:
      - develop
      - master

env:
  SDL_VERSION: 2.0.20
  SDL_MIXER_VERSION: 2.0.4

jobs:
  dependencies_windows:
    runs-on: windows-latest
    steps:
    - name: get_dependencies
      run: |
        C:\msys64\usr\bin\wget.exe -q http://www.zlib.net/zlib-1.2.13.tar.gz
        C:\msys64\usr\bin\wget.exe -q https://github.com/libsdl-org/SDL/releases/download/release-2.0.22/SDL2-devel-2.0.22-VC.zip
        C:\msys64\usr\bin\wget.exe -q https://github.com/libsdl-org/SDL_mixer/releases/download/release-2.6.0/SDL2_mixer-devel-2.6.0-VC.zip
    # zlib
    - name: zlib
      shell: bash
      run: |
        tar xf zlib-1.2.13.tar.gz
        cd zlib-1.2.13
        mkdir build
        cd build
        cmake ../ . -DCMAKE_INSTALL_PREFIX="C:/Program Files/zlib"
        cmake --build . --config Release
        cmake --install .
        cd ../../
    # libpng
    - name: libpng
      shell: bash
      run: |
        git clone git://git.code.sf.net/p/libpng/code libpng
        cd libpng
        mkdir build
        cd build
        cmake ../ . -DCMAKE_INSTALL_PREFIX="C:/Program Files/libpng"
        cmake --build . --config Release
        cmake --install .
        cd ../../
    # sdl
    - name: sdl - windows
      run: |
        mkdir ${HOME}/sdl_windows
        mv SDL2-devel-2.0.22-VC.zip ${HOME}/sdl_windows
        cd ${HOME}/sdl_windows
        unzip SDL2-devel-2.0.22-VC.zip
        cd
    # sdl_mixer
    - name: sdl_mixer - windows
      run: |
        mkdir ${HOME}/sdl_mixer_windows
        mv SDL2_mixer-devel-2.6.0-VC.zip ${HOME}/sdl_mixer_windows
        cd ${HOME}/sdl_mixer_windows
        unzip SDL2_mixer-devel-2.6.0-VC.zip
        cd
    - name: package
      shell: bash
      run: |
        mkdir avdl_dependencies_windows
        cp -r "C:/Program Files/zlib" avdl_dependencies_windows
        cp -r "C:/Program Files/libpng" avdl_dependencies_windows
        cp -r SDL2-2.0.22/include/* avdl_dependencies_windows/include
        cp -r SDL2-2.0.22/lib/* avdl_dependencies_windows/lib
        cp -r SDL2_mixer-2.6.0/include/* avdl_dependencies_windows/include
        cp -r SDL2_mixer-2.6.0/lib/* avdl_dependencies_windows/lib
    - uses: actions/upload-artifact@v3
      with:
        name: avdl_dependencies_windows
        path: avdl_dependencies_windows
  dependencies_linux:
    runs-on: ubuntu-latest
    steps:
    - name: update packages
      run: |
         sudo apt update && sudo apt install -y gcc pkg-config ca-certificates
         # sdl and sdl_mixer deps
         sudo apt install -y build-essential  git  make  cmake  autoconf  automake  libtool  pkg-config  libasound2-dev  libpulse-dev  libaudio-dev  libjack-dev  libx11-dev  libxext-dev  libxrandr-dev  libxcursor-dev  libxfixes-dev  libxi-dev  libxss-dev  libgl1-mesa-dev  libdbus-1-dev  libudev-dev  libgles2-mesa-dev  libegl1-mesa-dev  libibus-1.0-dev  fcitx-libs-dev  libsamplerate0-dev  libsndio-dev  libwayland-dev  libxkbcommon-dev  libdrm-dev  libgbm-dev
         # glew dependencies
         sudo apt install -y build-essential libxmu-dev libxi-dev libgl-dev
         # opus
         sudo apt install -y libssl-dev
         # read opus files
         sudo apt install -y libopusfile-dev
    - name: prepare directories
      run: |
        mkdir avdl_dependencies_linux
        mkdir avdl_dependencies_linux/include
        mkdir avdl_dependencies_linux/lib
    - name: libpng - linux
      run: |
        git clone git://git.code.sf.net/p/libpng/code libpng
        cd libpng
        ./configure --prefix=${HOME}/AVDL_DEPENDENCIES
        make -j6
        make -j6 install
        ./configure
        make -j6
        sudo make -j6 install
        cd ..
        cp ${HOME}/AVDL_DEPENDENCIES/lib/libpng.so avdl_dependencies_linux/lib
    - name: ogg - linux
      run: |
        git clone https://gitlab.xiph.org/xiph/ogg.git ogg
        cd ogg
        ./autogen.sh
        ./configure --prefix=${HOME}/AVDL_DEPENDENCIES
        make -j6
        make -j6 install
        ./autogen.sh
        ./configure
        make -j6
        sudo make -j6 install
        cd ..
        cp ${HOME}/AVDL_DEPENDENCIES/lib/libogg.so avdl_dependencies_linux/lib
    - name: vorbis - linux
      run: |
        git clone https://gitlab.xiph.org/xiph/vorbis.git vorbis
        cd vorbis
        ./autogen.sh
        ./configure --prefix=${HOME}/AVDL_DEPENDENCIES
        make
        make install
        cd ..
    - name: vorbis2 - linux
      run: |
        git clone https://gitlab.xiph.org/xiph/vorbis.git vorbis2
        cd vorbis2
        ./autogen.sh
        ./configure
        make
        sudo make install
        cd ..
    - name: opus - linux
      run: |
        git clone https://gitlab.xiph.org/xiph/opus.git opus
        cd opus
        ./autogen.sh
        ./configure --prefix=${HOME}/AVDL_DEPENDENCIES
        make
        make install
        ./autogen.sh
        ./configure
        make
        sudo make install
        cd ..
        cp ${HOME}/AVDL_DEPENDENCIES/lib/libopus.so avdl_dependencies_linux/lib
    - name: opusfile - linux
      run: |
        export PKG_CONFIG_PATH=${HOME}/AVDL_DEPENDENCIES
        git clone https://gitlab.xiph.org/xiph/opusfile.git opusfile
        cd opusfile
        ./autogen.sh
        ./configure --prefix=${HOME}/AVDL_DEPENDENCIES
        make -j6
        sudo make -j6 install
        cd ..
        cp ${HOME}/AVDL_DEPENDENCIES/lib/libopusfile.so avdl_dependencies_linux/lib
    - name: sdl - linux
      run: |
        export C_INCLUDE_PATH=${HOME}/AVDL_DEPENDENCIES/include
        export LIBRARY_PATH=${HOME}/AVDL_DEPENDENCIES/lib:${HOME}/AVDL_DEPENDENCIES/lib64
        git clone https://github.com/libsdl-org/SDL SDL
        cd SDL
        git checkout release-$SDL_VERSION
        mkdir build
        cd build
        ../configure --prefix=${HOME}/AVDL_DEPENDENCIES
        make -j6
        make -j6 install
        cd ../..
        cp ${HOME}/AVDL_DEPENDENCIES/lib/libSDL2.so avdl_dependencies_linux/lib
    - name: sdl_mixer - linux
      run: |
        git clone https://github.com/libsdl-org/SDL_mixer SDL_mixer
        cd SDL_mixer
        git checkout release-$SDL_MIXER_VERSION
        mkdir build
        cd build
        ../configure --prefix=${HOME}/AVDL_DEPENDENCIES --enable-music-ogg-vorbis
        make -j6
        make -j6 install
        cd ../..
        cp ${HOME}/AVDL_DEPENDENCIES/lib/libSDL2_mixer.so avdl_dependencies_linux/lib
    - name: glew - linux
      run: |
        git clone https://github.com/nigels-com/glew glew
        cd glew
        git checkout glew-2.2.0
        cd auto
        make
        cd ..
        make GLEW_DEST=${HOME}/AVDL_DEPENDENCIES
        make GLEW_DEST=${HOME}/AVDL_DEPENDENCIES install
        cd ..
        cp ${HOME}/AVDL_DEPENDENCIES/lib64/libGLEW.so avdl_dependencies_linux/lib
#    - name: sdl - windows
#      run: |
#        mkdir ${HOME}/sdl_windows
#        cd ${HOME}/sdl_windows
#        wget https://github.com/libsdl-org/SDL/releases/download/release-2.0.22/SDL2-devel-2.0.22-VC.zip
#        unzip SDL2-devel-2.0.22-VC.zip
#        cd
#    - name: sdl_mixer - windows
#      run: |
#        mkdir ${HOME}/sdl_mixer_windows
#        cd ${HOME}/sdl_mixer_windows
#        wget https://github.com/libsdl-org/SDL_mixer/releases/download/release-2.6.0/SDL2_mixer-devel-2.6.0-VC.zip
#        unzip SDL2_mixer-devel-2.6.0-VC.zip
#        cd
    - name: glew - windows
      run: |
        mkdir ${HOME}/glew_windows
        cd ${HOME}/glew_windows
        wget https://github.com/nigels-com/glew/releases/download/glew-2.2.0/glew-2.2.0-win32.zip
        unzip glew-2.2.0-win32.zip
        cd
    - name: collect_dependencies
      env:
        steamworks_api_link: ${{ secrets.STEAMWORKS_API_LINK }}
      run: |
        cp -d -r ${HOME}/AVDL_DEPENDENCIES/include/* avdl_dependencies_linux/include
#        cp -d -r ${HOME}/sdl_windows/SDL2-2.0.22/include/* avdl_dependencies_linux/include
#        cp -d -r ${HOME}/sdl_windows/SDL2-2.0.22/lib/* avdl_dependencies_linux/lib
#        cp -d -r ${HOME}/sdl_mixer_windows/SDL2_mixer-2.6.0/include/* avdl_dependencies_linux/include
#        cp -d -r ${HOME}/sdl_mixer_windows/SDL2_mixer-2.6.0/lib/* avdl_dependencies_linux/lib
        cp -d -r ${HOME}/glew_windows/glew-2.2.0/include/* avdl_dependencies_linux/include
        cp -d -r ${HOME}/glew_windows/glew-2.2.0/lib/* avdl_dependencies_linux/lib
        wget ${steamworks_api_link} --quiet
        unzip steamworks_sdk.zip
        mv sdk avdl_dependencies_linux/steamworks
        ls avdl_dependencies_linux/lib
        ls -lh avdl_dependencies_linux/lib
    - uses: actions/upload-artifact@v3
      with:
        name: avdl_dependencies_linux
        path: avdl_dependencies_linux
  build_linux:
    runs-on: ubuntu-latest
    needs: [dependencies_windows, dependencies_linux]
    steps:
    - name: update packages
      run: |
         sudo apt update && sudo apt install -y gcc pkg-config libgl1-mesa-dev unzip
    - name: init_avdl
      uses: actions/checkout@v1
    - uses: actions/download-artifact@v3
      with:
        name: avdl_dependencies_linux
        path: AVDL_BUILD/dependencies
    - uses: actions/download-artifact@v3
      with:
        name: avdl_dependencies_windows
        path: AVDL_BUILD/dependencies
    - name: build & package avdl
      run: |
        ls -R
        make -j6 prefix=AVDL_BUILD/ CC=gcc
        make -j6 prefix=AVDL_BUILD/ CC=gcc install
    - uses: actions/upload-artifact@v3
      with:
        name: avdl_build_linux
        path: AVDL_BUILD
  build_windows:
    runs-on: windows-latest
    needs: [dependencies_windows, dependencies_linux]
    steps:
    - name: init_avdl
      uses: actions/checkout@v1
    - name: compile
      shell: bash
      run: |
        mkdir build
        cd build
        cmake ../ . -DCMAKE_INSTALL_PREFIX="AVDL_BUILD"
        cmake --build . --config Release
        cmake --install .
        cd ..
    - uses: actions/download-artifact@v3
      with:
        name: avdl_dependencies_linux
        path: build/AVDL_BUILD/dependencies
    - uses: actions/download-artifact@v3
      with:
        name: avdl_dependencies_windows
        path: build/AVDL_BUILD/dependencies
    - uses: actions/upload-artifact@v3
      with:
        name: avdl_build_windows
        path: build/AVDL_BUILD
  create_release:
    runs-on: ubuntu-latest
    needs: [build_linux, build_windows]
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: avdl_build_linux
        path: avdl_build_linux
    - uses: actions/download-artifact@v3
      with:
        name: avdl_build_windows
        path: avdl_build_windows
    - name: zip packages
      run: |
         sudo apt update && sudo apt install -y zip
         zip avdl_build_linux.zip avdl_build_linux -r
         zip avdl_build_windows.zip avdl_build_windows -r
    - name: create release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: true
        prerelease: false
#        release_name: ${{ steps.version.outputs.version }}
        release_name: test_release
        tag_name: ${{ github.ref }}
#        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: upload linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: avdl_build_linux.zip
        asset_name: avdl_build_linux.zip
        asset_content_type: application/gzip
    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: avdl_build_windows.zip
        asset_name: avdl_build_windows.zip
        asset_content_type: application/gzip
