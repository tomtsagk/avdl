#
# project data
#
PROJECT_NAME=avdl
PROJECT_VERSION=0.0.0

#
# compiler data
#
#COMPILER_FLAGS=-Wall -Werror -Wpedantic
COMPILER_FLAGS=-Wall -Wpedantic
COMPILER_DEFINES=-DINSTALL_LOCATION=\"${INSTALL_LOCATION}/usr\" \
	-DPROJECT_NAME=\"${PROJECT_NAME}\"
COMPILER_INCLUDES=-Iinclude -I${DIRECTORY_OBJ}

#
# directories
#
DIRECTORY_BUILD=build
DIRECTORY_EXE=${DIRECTORY_BUILD}/bin
DIRECTORY_OBJ=${DIRECTORY_BUILD}/objects
DIRECTORY_ALL=${DIRECTORY_BUILD} ${DIRECTORY_EXE} ${DIRECTORY_OBJ}

#
# source files
#
YACC_SRC=${DIRECTORY_OBJ}/yacc.tab.c
LEX_SRC=${DIRECTORY_OBJ}/lex.yy.c
SRC=$(wildcard src/*.c)# ${YACC_SRC} ${LEX_SRC}
OBJ=${SRC:src/%.c=${DIRECTORY_OBJ}/%.o}

YACC_HEADER=${YACC_SRC:%.c=%.h}
HEADERS=$(widcard include/*.h) ${YACC_HEADER}

#
# executable
#
EXECUTABLE=${DIRECTORY_EXE}/${PROJECT_NAME}

#
# engine data
#
ENGINE_PATH=engines/cengine
ENGINE_OUT=${ENGINE_PATH}/build/libavdl-cengine.a


INSTALL_LOCATION=@INSTALL_LOCATION@

# android
DIRECTORIES=engines/android/app/src/main/cpp/engine/
CENGINE_FILES_HEADER=$(wildcard engines/cengine/include/*.h)
CENGINE_FILES_SRC=$(wildcard engines/cengine/src/*.c)
CENGINE_FILES_ANDROID_HEADER=$(CENGINE_FILES_HEADER:engines/cengine/include/%.h=engines/android/app/src/main/cpp/engine/%.h)
CENGINE_FILES_ANDROID_SRC=$(CENGINE_FILES_SRC:engines/cengine/src/%.c=engines/android/app/src/main/cpp/engine/%.c)
CENGINE_FILES_LOCAL=$(CENGINE_FILES_SRC:engines/cengine/src/%.c=engine\/%.c)

all: ${EXECUTABLE}

# build the executable, depends on source, lex, yacc and all engines
${EXECUTABLE}: ${DIRECTORY_ALL} ${DIRECTORIES} ${OBJ} ${YACC_SRC} ${YACC_HEADER} ${LEX_SRC} ${CENGINE_FILES_ANDROID_HEADER} ${CENGINE_FILES_ANDROID_SRC} engines/android/app/src/main/cpp/CMakeLists.txt
	$(CC) ${COMPILER_FLAGS} ${COMPILER_DEFINES} ${COMPILER_INCLUDES} ${OBJ} ${YACC_SRC} ${LEX_SRC} -o $@

# how to build lex
${LEX_SRC}: src/lex.l
	flex -o $@ src/lex.l

# how to build yacc
${YACC_SRC} ${YACC_HEADER}: src/yacc.y
	bison -o ${YACC_SRC} -d src/yacc.y

# how to build the c engine
engine:
	${MAKE} -C ${ENGINE_PATH}

install: ${EXECUTABLE}# ${ENGINE_PATH}/${ENGINE}
	${MAKE} -C ${ENGINE_PATH} PREFIX=${INSTALL_LOCATION} install
	mkdir -p ${INSTALL_LOCATION}/usr/bin
	install ${EXECUTABLE} ${INSTALL_LOCATION}/usr/bin/
	#mkdir -p ${INSTALL_LOCATION}/share/${PROJECT_NAME}
	#install ${ENGINE_PATH}/${ENGINE} ${INSTALL_LOCATION}/share/${PROJECT_NAME}/${ENGINE}
	#install ${ENGINE_PATH}/index.html ${INSTALL_LOCATION}/share/${PROJECT_NAME}/index.html
	mkdir -p ${INSTALL_LOCATION}/usr/share/man/man1/
	install manual/avdl.1 ${INSTALL_LOCATION}/usr/share/man/man1/
	#mkdir -p ${INSTALL_LOCATION}/share/info/
	#install avdl.info.gz ${INSTALL_LOCATION}/share/info/
	# vim files
	#mkdir -p ${INSTALL_LOCATION}/share/vim/vimfiles/syntax/
	#install vim/syntax/avdl.vim ${INSTALL_LOCATION}/share/vim/vimfiles/syntax/
	#mkdir -p ${INSTALL_LOCATION}/share/vim/vimfiles/ftdetect/
	#install vim/ftdetect/avdl.vim ${INSTALL_LOCATION}/share/vim/vimfiles/ftdetect/
	mkdir -p ${INSTALL_LOCATION}/usr/share/avdl/android
	cp -r engines/android/* ${INSTALL_LOCATION}/usr/share/avdl/android

tarball: ${PROJECT_NAME}.tar

${PROJECT_NAME}.tar:
	tar cf $@ src makefile engines include

clean:
	rm -f ${EXECUTABLE} ${LEX_SRC} ${YACC_SRC} ${YACC_HEADER}

destclean: clean
	rm -f avdl.info.gz makefile

# android files
engines/android/app/src/main/cpp/engine/%.h: engines/cengine/include/%.h
	cp $< $@

engines/android/app/src/main/cpp/engine/%.c: engines/cengine/src/%.c
	cp $< $@

engines/android/app/src/main/cpp/CMakeLists.txt: engines/android/app/src/main/cpp/CMakeLists.txt.in
	sed 's/%AVDL_ENGINE_FILES%/${CENGINE_FILES_LOCAL}/' $< > $@

${DIRECTORIES} ${DIRECTORY_ALL}:
	mkdir -p $@

${DIRECTORY_OBJ}/%.o: src/%.c ${HEADERS}
	$(CC) ${COMPILER_FLAGS} ${COMPILER_DEFINES} ${COMPILER_INCLUDES} -c $< -o $@


.PHONY: clean destclean install engine
